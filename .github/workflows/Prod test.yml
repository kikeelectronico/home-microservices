name: Prod - test

on:
  workflow_dispatch:
  push:
    branches: [ main ]

concurrency: 
  group: ${{ github.workflow }}
  cancel-in-progress: true
  
env:
  REGISTRY: ghcr.io

jobs:
  paths-filter:
    name: Paths filters
    runs-on: ubuntu-latest
    outputs:
      alert-system-request: ${{ steps.filter.outputs.alert-system-request }}
      ble-sensors-2-mqtt: ${{ steps.filter.outputs.ble-sensors-2-mqtt }}
      data-panel-api: ${{ steps.filter.outputs.data-panel-api }}
    steps:
    - uses: actions/checkout@v2
    - uses: dorny/paths-filter@v2
      id: filter
      with:
        filters: |
          alert-system-request:
            - "alert-system-request/**"
          ble-sensors-2-mqtt:
            - "ble-sensors-2-mqtt/**"
          data-panel-api:
            - "data-panel-api/**"

  alert-system-request:
    name: Build and publish alert-system-request
    runs-on: ubuntu-latest
    needs: paths-filter
    permissions:
      contents: read
      packages: write
    env:
      SERVICE_NAME: "alert-system-request"
    if: needs.paths-filter.outputs.${{ env.SERVICE_NAME }} == 'true'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: ${{ env.SERVICE_NAME }}
          file: ${{ env.SERVICE_NAME }}/Dockerfile
          platforms: linux/amd64
          push: true
          tags: ${{ env.REGISTRY }}/kikeelectronico/${{ env.SERVICE_NAME }}:latest
  
  ble-sensors-2-mqtt:
    name: Build and publish ble-sensors-2-mqtt
    runs-on: ubuntu-latest
    needs: paths-filter
    permissions:
      contents: read
      packages: write
    if: needs.paths-filter.outputs.ble-sensors-2-mqtt == 'true'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: ble-sensors-2-mqtt
          file: ble-sensors-2-mqtt/Dockerfile
          platforms: linux/amd64
          push: true
          tags: ${{ env.REGISTRY }}/kikeelectronico/ble-sensors-2-mqtt:latest

  data-panel-api:
    name: Build and publish data-panel-api
    runs-on: ubuntu-latest
    needs: paths-filter
    permissions:
      contents: read
      packages: write
    if: needs.paths-filter.outputs.data-panel-api == 'true'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: data-panel-api
          file: data-panel-api/Dockerfile
          platforms: linux/amd64
          push: true
          tags: ${{ env.REGISTRY }}/kikeelectronico/data-panel-api:latest

  deploy:
    name: Deploy to the server
    runs-on: ubuntu-latest
    needs: [alert-system-request, ble-sensors-2-mqtt, data-panel-api]
    if: ${{ always() && !failure() && !cancelled() }}
    steps:
      - name: Request update
        run: |
          curl --location --request POST '${{ secrets.DIP_URL }}' \
          --header 'Authorization: Bearer ${{ secrets.DIP_TOKEN }}'
