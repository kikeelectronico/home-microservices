name: Build service - Reusable

on:
    workflow_call:
        inputs:
            service:
                required: true
                type: string
            tag:
                required: true
                type: string
        secrets:
            REGISTRY_REPO:
              required: true
            REGISTRY:
                required: true
            GOOGLE_APPLICATION_CREDENTIALS:
                required: true
  
jobs:
  path-filter:
    name: Filter ${{ inputs.service }}
    runs-on: ubuntu-latest
    outputs:
        changed: ${{ steps.filter.outputs.changed }}
    steps:
    - uses: actions/checkout@v4
    - uses: dorny/paths-filter@v3
      id: filter
      with:
        filters: |
            changed:
            - "${{ inputs.service }}/**"

  create-rollback:
    name: Create rollback for ${{ inputs.service }}
    runs-on: ubuntu-latest
    needs: path-filter
    permissions:
      contents: read
      packages: write
    if: (needs.path-filter.outputs.changed == 'true' || github.event_name == 'workflow_dispatch') && inputs.tag == 'main'
    steps:
      - name: Authenticate to Google Cloud
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
      - name: Tag rollback image
        run: |
          gcloud container images add-tag ${{ secrets.REGISTRY }}/${{ secrets.REGISTRY_REPO }}/${{ inputs.service }}:${{ inputs.tag }} ${{ secrets.REGISTRY }}/${{ secrets.REGISTRY_REPO }}/${{ inputs.service }}:${{ inputs.tag }}-rollback
  
  build_and_push:
    name: Build and push ${{ inputs.service }}
    runs-on: ubuntu-latest
    needs: path-filter
    permissions:
      contents: read
      packages: write
    if: needs.path-filter.outputs.changed == 'true' || github.event_name == 'workflow_dispatch'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Authenticate to Google Cloud
        uses: 'google-github-actions/auth@v2'
        if: inputs.tag != 'only-test'
        with:
          credentials_json: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
      - name: Configure docker
        if: inputs.tag != 'only-test'
        run: |
          gcloud auth configure-docker ${{ secrets.REGISTRY }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ${{ inputs.service }}
          file: ${{ inputs.service }}/Dockerfile
          platforms: linux/amd64
          push: ${{ inputs.tag != 'only-test' }}
          tags: ${{ secrets.REGISTRY }}/${{ secrets.REGISTRY_REPO }}/${{ inputs.service }}:${{ inputs.tag }}